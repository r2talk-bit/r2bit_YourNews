# YourNews App - Aplica√ß√£o de busca de not√≠cias
# Este aplicativo usa o framework Streamlit para criar uma interface web simples
# que permite aos usu√°rios buscar not√≠cias sobre um assunto espec√≠fico.

# Streamlit √© um framework Python que permite criar aplica√ß√µes web interativas
# com c√≥digo Python puro, sem necessidade de conhecer HTML, CSS ou JavaScript.
# Saiba mais em: https://streamlit.io/

# Importa√ß√£o das bibliotecas necess√°rias
import os  # Biblioteca padr√£o para interagir com o sistema operacional
import streamlit as st  # Framework Streamlit para criar a interface web
from dotenv import load_dotenv  # Biblioteca para carregar vari√°veis de ambiente de um arquivo .env

# Importamos a fun√ß√£o search_news do nosso m√≥dulo personalizado
# Esta fun√ß√£o ser√° respons√°vel por buscar as not√≠cias na internet
from utils.searchnews import search_news

# Carregamos as vari√°veis de ambiente do arquivo .env
# Isso √© √∫til para armazenar informa√ß√µes sens√≠veis como chaves de API
load_dotenv()

# Acessamos a vari√°vel de ambiente APP_NAME
# Se ela n√£o existir, usamos "YourNews App" como valor padr√£o
app_name = os.getenv("APP_NAME", "YourNews App")

# Configuramos a p√°gina da aplica√ß√£o Streamlit
# Esta deve ser a primeira fun√ß√£o Streamlit a ser chamada no script
st.set_page_config(
    page_title=app_name,  # T√≠tulo que aparecer√° na aba do navegador
    page_icon="üì∞",     # √çcone que aparecer√° na aba do navegador (emoji de jornal)
    layout="wide"       # Layout amplo para melhor utiliza√ß√£o do espa√ßo da tela
)

# Ocultamos elementos padr√£o do Streamlit usando CSS personalizado
# Isso inclui o menu principal, o rodap√© e o bot√£o de Deploy
hide_streamlit_style = """
<style>
#MainMenu {visibility: hidden;}  /* Oculta o menu principal */
footer {visibility: hidden;}     /* Oculta o rodap√© */
.stDeployButton {display:none;}  /* Oculta o bot√£o de Deploy */
</style>
"""
# Aplicamos o CSS personalizado usando markdown com HTML
# O par√¢metro unsafe_allow_html=True permite usar tags HTML no markdown
st.markdown(hide_streamlit_style, unsafe_allow_html=True)

# Adicionamos o t√≠tulo principal da aplica√ß√£o
st.title("Your News")

# Criamos um layout de duas colunas para organizar a interface
# A propor√ß√£o [1, 2] significa que a coluna da direita ser√° duas vezes mais larga que a da esquerda
left_col, right_col = st.columns([1, 2])

# Come√ßamos a definir o conte√∫do da coluna da esquerda
with left_col:
    # Criamos um campo de entrada de texto para o usu√°rio digitar o assunto da busca
    # O valor digitado ser√° armazenado na vari√°vel 'subject'
    # Limitamos o campo a 20 caracteres
    subject = st.text_input("Enter a subject to search for news about:", max_chars=20)
    
    # Adicionamos um bot√£o para iniciar a busca
    # Quando clicado, search_button ser√° True, caso contr√°rio ser√° False
    search_button = st.button("Search for News")
    
    # Usamos o session_state do Streamlit para armazenar os resultados da busca
    # O session_state permite manter dados entre as execu√ß√µes do script
    # (O Streamlit reexecuta todo o script a cada intera√ß√£o do usu√°rio)
    if "news_results" not in st.session_state:
        st.session_state.news_results = ""  # Inicializa com uma string vazia se n√£o existir
    
    # Verificamos se o bot√£o foi clicado E se h√° um assunto digitado
    if search_button and subject:
        # Mostramos um indicador de carregamento (spinner) enquanto a busca √© realizada
        with st.spinner(f"Searching for news about {subject}..."):
            # Chamamos a fun√ß√£o search_news e armazenamos o resultado no session_state
            st.session_state.news_results = search_news(subject)

# Agora definimos o conte√∫do da coluna da direita
with right_col:
    # Verificamos se j√° temos resultados de busca armazenados
    if not st.session_state.news_results:
        # Se n√£o h√° resultados, mostramos instru√ß√µes para o usu√°rio
        # A fun√ß√£o st.info cria uma caixa de informa√ß√£o com fundo azul
        st.info("### Instructions\n\nEnter a subject in the text box on the left and click 'Search for News' to see the latest news about your topic.\n\nThe results will appear here.")
        
        # Criamos um container vazio para futuros resultados
        # Um container √© uma √°rea onde podemos adicionar elementos Streamlit
        st.container()
        
        # Adicionamos texto formatado usando markdown
        # O Streamlit suporta a sintaxe markdown para formata√ß√£o de texto
        st.markdown("### Results will appear here")
        st.markdown("---")  # Linha horizontal
        st.markdown("*Waiting for your search query...*")  # Texto em it√°lico
    else:
        # Se h√° resultados, exibimos o conte√∫do formatado como markdown
        # Os resultados j√° est√£o formatados como markdown pela fun√ß√£o search_news
        st.markdown(st.session_state.news_results)

# Adicionamos um rodap√© √† p√°gina, fora das colunas
# Isso aparecer√° na parte inferior da p√°gina
st.markdown("---")  # Linha horizontal para separar o conte√∫do do rodap√©
st.markdown(" 2025 YourNews App | Created with Streamlit")  # Texto de copyright
